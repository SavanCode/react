[{"C:\\Users\\xiong\\Documents\\GitHub\\react\\expensify-app\\src\\index.js":"1","C:\\Users\\xiong\\Documents\\GitHub\\react\\expensify-app\\src\\reportWebVitals.js":"2","C:\\Users\\xiong\\Documents\\GitHub\\react\\expensify-app\\src\\App.js":"3"},{"size":8052,"mtime":1609170821267,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"6","hashOfConfig":"5"},{"size":528,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"fw5r5s",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\xiong\\Documents\\GitHub\\react\\expensify-app\\src\\index.js",["17","18","19","20","21","22","23"],"import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter,Route,Switch,Link} from \"react-router-dom\";\nimport { NavLink} from \"react-router-dom\";\nimport {createStore,combineReducers} from \"redux\";\nimport {v4 as uuidv4} from 'uuid'\n\n\nconst Header =()=>(\n  <div>\n    <h1>Portfolio</h1>\n    <NavLink exact to=\"/\">  Home </NavLink>\n    <NavLink exact to=\"/Portfolio\">  Portfolio </NavLink>\n    <NavLink exact to=\"/Contact\">  Contact </NavLink> \n  </div>);\n\n\nconst Home =()=>{ \n  return (\n    <div>\n        <h1>Welcome</h1>\n        <p>This is my site. Take a look around!</p>\n  </div>\n  )}\n  \n  const Item =()=>{\n      return (\n          <div> \n             <Link to= \"/Portfolio/1\" >item 1</Link> \n             <Link to= \"/Portfolio/2\" >item 2</Link>   \n          </div>\n      )}\n      \n  const ItemDetail =(props)=>{\n    return (\n        <div>  \n          <h1>A Thing I've Done</h1>\n          <p>This page is for item with the id of {props.match.params.id}</p>\n        </div>\n    )}\n\n\n  const Portfolio =()=>(\n  <div>\n    <h1>My Work</h1>\n      <p>Checkout the stuff I have done</p>\n      {/* <Link to= \"/Portfolio/1\" >item 1</Link> \n      <Link to= \"/Portfolio/2\" >item 2</Link> */}\n      <Item />\n  </div>\n  );\n\n  const Contact =()=>(\n  <div>\n      <h1>Contact</h1>\n      <p>You can reach me at test@gmail.com</p>\n  </div>\n  );\n\n    const NotFoundPage= ()=>(\n      <div>\n        404 - <Link to=\"/\">Go Home</Link>\n      </div>\n    )\nconst Content = () => (\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/Portfolio\" component={Portfolio} />\n      <Route exact path=\"/Portfolio/:id\"  component={ItemDetail} />\n      <Route path=\"/Contact\" component={Contact} />\n      <Route component={NotFoundPage} />\n    </Switch>\n  );\n\nconst routes = (\n  <BrowserRouter>\n    <Route path=\"/\"  component={Header} />\n      <Content /> \n  </BrowserRouter>\n )\n\n ReactDOM.render(routes ,\n  document.getElementById('root')\n);\n\n/*\n const initState = {\n  count :0 ,\n  list:['任务一',\"任务二\"]\n};\n\n\nconst countReducer=(state=initState,action)=>{\n  switch(action.type){\n  case \"INCREMENT\": \n    return { count:state.count+action.incrementBy };\n  \n  case \"DECREMENT\":  \n    return { count:state.count-action.decrementBy };\n  \n  case \"RESET\": return { count:0 };\n\n  case \"SET\": return { count:action.setCount };\n  \n  default: return state\n  }\n}\n\n\n //仓库放所有action选择 以及state 以及返回新的对象\nconst store = createStore(countReducer) \n//实时监控\nconst unsub=store.subscribe(()=>{ console.log(store.getState()); })\n\n//返回操作函数（对象包装函数） action generator\nconst increment =(payload={})=>{\n  return {\n  type: \"INCREMENT\",\n  incrementBy:typeof payload.incrementBy ==='number'? payload.incrementBy :1}\n}\n//这里利用解构 简化写法\nconst decrement =({decrementBy=1}={})=>{\n return{\n  type: \"DECREMENT\",\n  decrementBy} \n}\n\n\nconst reset =()=>{\n  return {\n    type: \"RESET\"\n  }\n}\n\n\nconst set =({setCount}={})=>{\n  return {\n    type: \"SET\",\n    setCount\n  }\n}\n\n//执行\nstore.dispatch(increment({incrementBy:6}))\nstore.dispatch(increment({\n  type: \"INCREMENT\" \n}))\n//直接取消掉subscribe\n\n\nstore.dispatch(decrement({decrementBy:5})) \n\nstore.dispatch(reset())\n\nstore.dispatch(decrement({decrementBy:5})) \n\nstore.dispatch(set({setCount:-99})) \n\nunsub();\n\n//后面执行但是不会跟踪\nstore.dispatch({\n  type: \"DECREMENT\",\n  decrementBy:3\n}) \nconsole.log(store.getState())\n \n*/\n\n\n\n//default state & reducer\nconst expensesReducerDefaultState=[];\nconst expensesReducer=(state=expensesReducerDefaultState,action)=> {\n  switch(action.type){\n    case \"ADD_EXPENSE\": \n    //return  state.concat(action.expense);//此处不影响原先数组 只是返回新数组 \n    return [...state,action.expense];\n    case \"REMOVE_EXPENSE\": \n    return state.filter(function (elem) {\n      return (elem.id !== action.id);\n    });\n    case \"EDIT_EXPENSE\": \n    //return  state.concat(action.expense);//此处不影响原先数组 只是返回新数组 \n    return state.map((expense)=>{\n      if(expense.id===action.id){\n        return {\n          ...expense,\n          ...action.updates,\n        }\n      }else{\n        return expense\n      }\n    });\n    default: return state\n  }\n}\n\n//action\n\nconst addExpense=({\n  description=\"\",\n  note=\"\",\n  amount=0,\n  createdAt=0\n}={})=>({\n    type:\"ADD_EXPENSE\",\n    expense:{\n    id:uuidv4(),\n    description,\n    note,\n    amount,\n    createdAt}\n  })\n\nconst removeExpense=({id}={})=>({ type:\"REMOVE_EXPENSE\", id })\n\nconst editExpense=(id,updates)=>({\n    type:\"EDIT_EXPENSE\",\n    id,\n    updates\n})\n\n\nconst filtersReducerDefaultState={\n    text:'',\n    sortBy:'amount',//date or amount\n    startDate:undefined,\n    endDate:undefined,\n};\nconst filtersReducer=(state=filtersReducerDefaultState,action)=> {\n  switch(action.type){\n  case \"SET_TEXT_FILTER\": \n    return {\n      ...state,\n      text:action.name\n    }\n  case \"SORT_BY_DATE\": \n    return {\n      ...state,\n      sortBy:'date'\n    }\n  case \"SORT_BY_AMOUNT\": \n    return {\n      ...state,\n      sortBy:'amount'\n    }\n  case \"SET_START_DATE\": \n    return {\n      ...state,\n      startDate:action.startDate\n    }\n  case \"SET_END_DATE\": \n    return {\n      ...state,\n      endDate:action.endDate\n    }\n    default: return state\n  }\n}\n\nconst setTextFilter = (name)=>({\n  type:\"SET_TEXT_FILTER\",\n  name\n})\n\nconst sortByDate = ()=>({\n  type:\"SORT_BY_DATE\"\n})\n\nconst sortByAmount = ()=>({\n  type:\"SORT_BY_AMOUNT\"\n})\n\nconst setStartDate=(startDate)=>({\n  type:\"SET_START_DATE\",\n  startDate\n})\n\nconst setEndDate=(endDate)=>({\n  type:\"SET_END_DATE\",\n  endDate\n})\n\n\n //仓库放所有action选择 以及state 以及返回新的对象\nconst store = createStore(combineReducers({expenses:expensesReducer,filters:filtersReducer})) \n\nconst getVisibleExpenses=(expenses,{text,sortBy,startDate,endDate})=>{\n  return expenses.filter((element)=>{\n    //if not set the startdate and createdAt is ok\n    const startDateMatch = typeof startDate !== 'number' || element.createdAt >= startDate;\n    const endDateMatch =  typeof endDate !== 'number' || element.createdAt <= endDate;\n    const textMatch = element.description.toLowerCase().includes(text.toLowerCase());\n    return startDateMatch && endDateMatch && textMatch;\n  }).sort((a,b)=>{\n    if(sortBy === \"date\"){\n      return a.createdAt > b.createdAt ? 1 : -1;\n    }else if(sortBy === \"amount\"){\n      return a.amount > b.amount ? 1 : -1;\n    }\n  })\n}\n\n\n//实时监控\nconst unsub=store.subscribe(()=>{ \n  const state=store.getState();\n  const visibleExpenses =getVisibleExpenses(state.expenses,state.filters);\n  console.log(visibleExpenses);\n  console.log(store.getState()); \n})\n\n//返回操作函数（对象包装函数） action generator\n const expenseOne = store.dispatch(addExpense({description:\"cRent\",amount:215610,createdAt:1000})) \n const expenseTwo = store.dispatch(addExpense({description:\"Coffee1\",amount:1,createdAt:-1000})) \n store.dispatch(addExpense({description:\"Coffee2\",amount:2,createdAt:2000})) \n store.dispatch(addExpense({description:\"Coffee3\",amount:3,createdAt:3000}))  \n\n //store.dispatch(removeExpense({id:expenseOne.expense.id}))  \n store.dispatch(editExpense(expenseTwo.expense.id,{description:\"c\",amount:9}))  \n store.dispatch(setTextFilter(\"c\")); \n store.dispatch(sortByAmount()); \n //store.dispatch(sortByDate()); \n //store.dispatch(setStartDate(0)); \n //store.dispatch(setEndDate(999)); \n\n// const demoState={\n//   expenses:[{\n//     id:'poijasdfhwer',\n//     description:'January Rent',\n//     note:'This was the final payment',\n//     amount:54500,\n//     createdAt:0\n//   }],\n//   filters:{\n//     text:'rent',\n//     sortBy:'amount',//date or amount\n//     startDate:undefined,\n//     endDate:undefined,\n//   }\n// }\n\n\n\n\n\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n ","C:\\Users\\xiong\\Documents\\GitHub\\react\\expensify-app\\src\\reportWebVitals.js",[],["24","25"],"C:\\Users\\xiong\\Documents\\GitHub\\react\\expensify-app\\src\\App.js",[],["26","27"],{"ruleId":"28","severity":1,"message":"29","line":217,"column":7,"nodeType":"30","messageId":"31","endLine":217,"endColumn":20},{"ruleId":"28","severity":1,"message":"32","line":268,"column":7,"nodeType":"30","messageId":"31","endLine":268,"endColumn":17},{"ruleId":"28","severity":1,"message":"33","line":276,"column":7,"nodeType":"30","messageId":"31","endLine":276,"endColumn":19},{"ruleId":"28","severity":1,"message":"34","line":281,"column":7,"nodeType":"30","messageId":"31","endLine":281,"endColumn":17},{"ruleId":"35","severity":1,"message":"36","line":297,"column":16,"nodeType":"37","messageId":"38","endLine":297,"endColumn":18},{"ruleId":"28","severity":1,"message":"39","line":308,"column":7,"nodeType":"30","messageId":"31","endLine":308,"endColumn":12},{"ruleId":"28","severity":1,"message":"40","line":316,"column":8,"nodeType":"30","messageId":"31","endLine":316,"endColumn":18},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"41","replacedBy":"45"},{"ruleId":"43","replacedBy":"46"},"no-unused-vars","'removeExpense' is assigned a value but never used.","Identifier","unusedVar","'sortByDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","'setEndDate' is assigned a value but never used.","array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'unsub' is assigned a value but never used.","'expenseOne' is assigned a value but never used.","no-native-reassign",["47"],"no-negated-in-lhs",["48"],["47"],["48"],"no-global-assign","no-unsafe-negation"]